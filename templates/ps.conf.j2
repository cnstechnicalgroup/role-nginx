upstream php-{{ site_public_url }} {
  server unix:/var/run/{{ site_public_url }}.sock;
}

index index.php index.html index.htm;

server {

  listen 80;
  listen [::]:80{% if mode == 'stage' %} default_server{% endif %};
  server_name {{ site_public_url }} {% if mode == 'stage' %}{{ site_public_url_stage }}{% endif %};
  return 301 {{ 'https' if use_ssl else 'http' }}://{% if mode == 'stage' %}$host{% else %}$server_name{% endif %}$request_uri;

}

server {

  listen 443;
  listen {{ "[::]:443" if use_ssl else "[::]:80" }};
  keepalive_timeout 70;

  port_in_redirect off;
  server_name {{ site_public_url }} {% if mode == 'stage' %}{{ site_public_url_stage }}{% endif %};
  root {{ web_root }}/ ;
  set $admin_dir /{{ ps_admin_dir }};

  # Gzip Settings
  gzip on;
  gzip_vary on;
  gzip_proxied any;
   
  gzip_types
      application/atom+xml
      application/javascript
      application/json             
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json             
      application/vnd.ms-fontobject
      application/x-font-ttf  
      application/x-web-app-manifest+json               
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain   
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt     
      text/x-component  
      text/x-cross-domain-policy;

  client_max_body_size 64M;
  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;

  # Deny access to any files with a .php extension in the uploads directory
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

  location ~ ^/(status|ping)$ {
    access_log off;
    include fastcgi_params;
    fastcgi_pass php-{{ site_public_url }};
  }

  # Symfony controllers Specific for 1.7
  location ~ /(international|_profiler|module|product|feature|attribute|supplier|combination|specific-price)/(.*)$ {
    try_files $uri $scheme://$host$uri/ /index.php?q=$uri&$args $admin_dir/index.php$is_args$args;
  }

  location / {
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header Host $http_host;
     proxy_redirect off;
     proxy_next_upstream error;
     try_files $uri $uri/ /index.php?$args;
  }

  location ~* \.(eot|otf|ttf|woff|woff2|gif|jpg|jpeg|png)$ {
    add_header Access-Control-Allow-Origin *;
  }

  location ~* \.(gif|jpg|jpeg|png|css|js)$ {
    expires max;
  }

  {% if rewrite_rules is defined %}
  # Loop all rewrite_rules from group_vars (see README.md)
  {% for rule in rewrite_rules %}
  rewrite {{ rule }}
  {% endfor %}
  {% endif %}

  error_page 404 /index.php?controller=404;
                       
  # Static assets delivery optimisations
  add_header Strict-Transport-Security max-age=31536000;
                                                             
  location ~* \.(eot|otf|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
  }                                            
         
  location ~* \.(css|js|docx|zip|pptx|swf|txt|jpg|jpeg|png|gif|swf|webp|flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav|mp4|m4v|ogg|webm|aac)$ {
    expires max;                           
    log_not_found off;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }                                       

  # Deny access to .htaccess .DS_Store .htpasswd etc 
  location ~ /\. {        
      deny all;
  }  

  # PHP 7 FPM part
  location ~ [^/]\.php(/|$) {
    fastcgi_index index.php;
    # Switch if needed
    include fastcgi_params;
    fastcgi_pass  php-{{ site_public_url }};
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_keep_conn on;
    fastcgi_send_timeout 30s;
    client_max_body_size 10M;

    # Temp file tweak
    fastcgi_max_temp_file_size 1M;
    fastcgi_temp_file_write_size 256k;
    fastcgi_buffers  16 16k;
    fastcgi_buffer_size  32k;
  }

  {% if nginx_whitelist_path is defined %}
# Optionally include a whitelist for
# target paths
  rewrite "^/allow.conf$" https://$host last;
  location {{ nginx_whitelist_path }} {
    include {{ web_root }}/allow.conf;
  }
  {% endif %}

}

